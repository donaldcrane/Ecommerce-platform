{"version":3,"sources":["../../src/middlewares/authenticate.js"],"names":["jwt","require","User","jwt_decode","config","module","exports","req","res","next","authorization","headers","token","split","adminUser","_id","Authentication","findAdminById","user","status","json","error","id","findOne"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEAC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,wHAC2BC,GAD3B,EACgCC,GADhC,EACqCC,IADrC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIcC,gBAAAA,aAJd,GAIgCH,GAAG,CAACI,OAJpC,CAIcD,aAJd;;AAAA,qBAKUA,aALV;AAAA;AAAA;AAAA;;AAMYE,gBAAAA,KANZ,GAMoBF,aAAa,CAACG,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CANpB;AAOYC,gBAAAA,SAPZ,GAOwBX,UAAU,CAACS,KAAD,CAPlC;AAQcG,gBAAAA,GARd,GAQsBD,SARtB,CAQcC,GARd;AAAA;AAAA,uBASyBC,cAAc,CAACC,aAAf,CAA6B;AAACF,kBAAAA,GAAG,EAAHA;AAAD,iBAA7B,CATzB;;AAAA;AASYG,gBAAAA,IATZ;AAUMT,gBAAAA,IAAI;;AAVV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAaaD,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,kBAAAA,MAAM,EAAE,GAAV;AAAeE,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,CAbb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAe6BC,EAf7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAiBmBpB,IAAI,CAACqB,OAAL,CAAa;AAACR,kBAAAA,GAAG,EAAEO;AAAN,iBAAb,CAjBnB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\nconst User = require(\"../models/User\");\r\nconst jwt_decode = require(\"jwt-decode\");\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nmodule.exports = class Authentication {\r\n  static async verifyAdmin(req, res, next) {\r\n    try {\r\n      \r\n      const { authorization } = req.headers;\r\n      if (authorization) {\r\n      const token = authorization.split(\" \")[1];\r\n      const adminUser = jwt_decode(token);\r\n      const { _id } = adminUser;\r\n      const user = await Authentication.findAdminById({_id});\r\n      next();\r\n      }\r\n    } catch (error) {\r\n      return res.status(500).json({ status: 500, error: \"Server Error.\" });\r\n    }}\r\n  static async findAdminById(id) {\r\n    try {\r\n      return await User.findOne({_id: id}\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n  \r\n\r\n\r\n"],"file":"authenticate.js"}